{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/common/function/input.validation.function.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/auth/auth.module.ts","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.component.html"],"names":[],"mappings":"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","file":"5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { AngularFireAuthGuard } from '@angular/fire/auth-guard';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { redirectLoggedInToHome } from '../common/function/auth.function';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    pathMatch: \"prefix\",\r\n    children: [\r\n      {\r\n        path: \"login\",\r\n        pathMatch: \"full\",\r\n        component: LoginComponent,\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectLoggedInToHome }\r\n      },\r\n      {\r\n        path: \"register\",\r\n        pathMatch: \"full\",\r\n        component: RegisterComponent,\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectLoggedInToHome }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function mustMatch(other: AbstractControl | null): ValidatorFn {\r\n    return (origin: AbstractControl): ValidationErrors => {\r\n        \r\n        if(other == null || other.value === origin.value) {\r\n            return {};\r\n        }\r\n\r\n        return {\"MUSTMATCH\": true};\r\n    }\r\n};","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/common/dto/user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n\r\n  constructor(builder: FormBuilder, private toastr: ToastrService, private router: Router,\r\n    private auth: AngularFireAuth) {\r\n\r\n    this.loginForm = builder.group({\r\n      \"email\": ['', [Validators.email, Validators.required]],\r\n      \"password\": ['', [Validators.required, Validators.minLength(8)]]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.valid) {\r\n      const user: User = this.loginForm.value;      \r\n      this.auth.signInWithEmailAndPassword(user.email, user.password).then(\r\n        () => {\r\n          this.toastr.success(\"You are logged in. You will be redirected to homepage shortly.\");\r\n          this.router.navigateByUrl(\"/home\")\r\n        },\r\n        (reason: any) => {\r\n          this.toastr.error(\"Could not login into the account due to '\"+reason.message+\"'.\");\r\n        }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row justify-content-center pt-5\">\r\n    <div class=\"col-4 pt-5\">\r\n        <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control input-box-gradient text-color-1 font-size-3-5 \" \r\n                    placeholder=\"Enter Email\"\r\n                    type=\"email\"\r\n                    autocomplete=\"on\"\r\n                    formControlName=\"email\" />\r\n                <div *ngIf=\"loginForm.controls.email.touched == true && loginForm.controls.email.errors !== null\" \r\n                    class=\"invalid-feedback d-block\">\r\n                    Please provide valid email address.\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group pt-2\">\r\n                <input class=\"form-control input-box-gradient text-color-1 font-size-3-5 \" \r\n                    placeholder=\"Password\"\r\n                    type=\"password\" \r\n                    autocomplete=\"on\"\r\n                    formControlName=\"password\" />\r\n\r\n                <div *ngIf=\"loginForm.controls.password.touched == true && loginForm.controls.password.errors !== null\" \r\n                    class=\"invalid-feedback d-block\">\r\n                    Please provide password with greater then 8 character.\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group pt-2 d-flex justify-content-start\">\r\n                <button \r\n                    class=\"btn btn-info btn-transparent font-size-4 text-uppercase font-size-3-5 rounded-pill px-3\" \r\n                    type=\"submit\">Sign In</button>\r\n                <button \r\n                    [routerLink]=\"['../register']\"\r\n                    class=\"btn btn-info btn-transparent font-size-4 text-uppercase font-size-3-5 rounded-pill px-3 mx-3\" \r\n                    type=\"submit\">Register</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    ReactiveFormsModule,\r\n    AngularFireAuthModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/common/dto/user';\r\nimport { mustMatch } from 'src/app/common/function/input.validation.function';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n\r\n  constructor(builder: FormBuilder, private toastr: ToastrService, private auth: AngularFireAuth,\r\n    private router: Router) {\r\n    this.loginForm = builder.group({});\r\n\r\n    const email: AbstractControl = new FormControl('', [Validators.email, Validators.required]);\r\n    const password: AbstractControl = new FormControl('', [Validators.required, Validators.minLength(8)]);\r\n    const cpassword: AbstractControl = new FormControl('', [Validators.required, Validators.minLength(8), mustMatch(password)]);\r\n\r\n    this.loginForm.addControl(\"email\", email);\r\n    this.loginForm.addControl(\"password\", password);\r\n    this.loginForm.addControl(\"cpassword\", cpassword);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.loginForm.markAllAsTouched();\r\n    if(this.loginForm.valid){\r\n      let user: User = this.loginForm.value as User;\r\n      this.auth.createUserWithEmailAndPassword(user.email, user.password).then(\r\n        () => {\r\n          this.toastr.success(\"Account created! You will be redirected to homepage shortly.\");\r\n          this.router.navigateByUrl(\"/home\")\r\n        },\r\n        (reason: any) => {\r\n          this.toastr.error(\"Could not create account due to '\"+reason.message+\"'.\");\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row justify-content-center pt-5\">\r\n    <div class=\"col-4 pt-5\">\r\n        <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control input-box-gradient text-color-1 font-size-3-5 \" \r\n                    placeholder=\"Enter Email\"\r\n                    type=\"email\" \r\n                    autocomplete=\"on\"\r\n                    formControlName=\"email\" />\r\n                <div *ngIf=\"loginForm.controls.email.touched == true && loginForm.controls.email.errors !== null\" \r\n                    class=\"invalid-feedback d-block\">\r\n                    Please provide valid email address.\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group pt-2\">\r\n                <input class=\"form-control input-box-gradient text-color-1 font-size-3-5 \"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\" \r\n                    autocomplete=\"on\"\r\n                    formControlName=\"password\" />\r\n                <div *ngIf=\"loginForm.controls.password.touched == true && loginForm.controls.password.errors !== null\" \r\n                    class=\"invalid-feedback d-block\">\r\n                    Please provide password with greater then 8 character.\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group pt-2\">\r\n                <input class=\"form-control input-box-gradient text-color-1 font-size-3-5 \"\r\n                    placeholder=\"Confirm Password\"\r\n                    type=\"password\" \r\n                    autocomplete=\"on\"\r\n                    formControlName=\"cpassword\" />\r\n                <div *ngIf=\"loginForm.controls.cpassword.touched == true && loginForm.controls.cpassword.errors !== null\" \r\n                    class=\"invalid-feedback d-block\">\r\n                    Confirm Password should match with the password.\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group pt-2 d-flex justify-content-start\">\r\n                <button \r\n                    class=\"btn btn-info btn-transparent font-size-4 text-uppercase font-size-3-5 rounded-pill px-3\" \r\n                    type=\"submit\">Register</button>\r\n                <button \r\n                    [routerLink]=\"['../login']\"\r\n                    class=\"btn btn-info btn-transparent font-size-4 text-uppercase font-size-3-5 rounded-pill px-3 mx-3\" \r\n                    type=\"button\">Back to login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}